name: Nigthly packages build

on:
  push:
    branches: [ master ]

jobs:
  deb12:
    name: Debian 12 nightly package building
    runs-on: ubuntu-latest
    container: ghcr.io/yeti-switch/yeti-web/build-image:bookworm
    services:
      db:
        image: ghcr.io/yeti-switch/yeti-web/pgsql:16

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: set git safe directory
        run: git config --global --add safe.directory '*'
          
      - name: Build package
        run: make package
        env:
          YETI_DB_HOST: db
          YETI_DB_PORT: 5432
          CDR_DB_HOST: db
          CDR_DB_PORT: 5432
          PACKAGE_TYPE: nightly

      - name: Save deb package as artifact
        uses: actions/upload-artifact@v4
        with:
          name: deb12-package
          path: /__w/yeti-web/*.deb



      
on: workflow_dispatch
jobs:
  build:
    runs-on: ubuntu-latest
    container: debian:bookworm
    steps:
      - name: install aux deps
        run: apt update && apt -y --no-install-recommends install git ca-certificates curl gpg
      - name: add pgdg pkg repo
        run: >
          echo "deb [arch=amd64] http://apt.postgresql.org/pub/repos/apt bookworm-pgdg main" >> /etc/apt/sources.list.d/pgdg.list &&
          curl https://www.postgresql.org/media/keys/ACCC4CF8.asc | gpg --dearmor > /etc/apt/trusted.gpg.d/apt.postgresql.org.gpg
      - run: apt update

      - name: clone repo
        uses: actions/checkout@v3

      - name: override pgversions
        run: echo 16 > debian/pgversions

      - name: install build deps
        run: apt -y --no-install-recommends install debhelper python3 postgresql-server-dev-all build-essential
      - name: build
        run: make deb

      - uses: yeti-switch/upload-debian-pkg-action@v2
        with:
          pkgs: '../*.deb'
          pkgs_to_remove: 'yeti-web'
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg_passphrase: ${{ secrets.GPG_PASSPHRASE }}
          s3_prefix: nightly
          s3_access_key_id: ${{ secrets.DEB_AWS_ACCESS_KEY_ID }}
          s3_secret_access_key: ${{ secrets.DEB_AWS_SECRET_ACCESS_KEY }}
          s3_endpoint_url: ${{ secrets.DEB_AWS_ENDPOINT }}

  deb12_container:
    name: Debian 12 container
    needs: deb12
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: deb12-package

      - name: Display structure of downloaded files
        run: ls -la

      - name: Display path
        run: pwd

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push to Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ci/nightly-package.Dockerfile
          push: true
          tags: ghcr.io/yeti-switch/yeti-web:nightly-build

